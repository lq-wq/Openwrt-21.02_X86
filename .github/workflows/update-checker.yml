#
# Copyright (c) 2019-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#

name: Update Checker

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02

on:
  workflow_dispatch:
   schedule:
     - cron: 0 */18 * * 1

jobs:
  check:
    runs-on: ubuntu-latest

    steps:

    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH .
        echo "::set-output name=commitHash::$(git rev-parse HEAD)"

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash
        key: HEAD-${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash

    - name: Trigger build
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.ACTIONS_TRIGGER_PAT }}
        event-type: Source Code Update

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1

    - name: 发送[在线更新固件]至云端1
      id: regular
      continue-on-error: true
      if: steps.compile.outcome == 'success' && env.REGULAR_UPDATE == 'true' && env.REPO_TOKEN
      uses: ncipollo/release-action@main
      with:
        name: AutoUpdate
        tag: AutoUpdate
        token: ${{ secrets.REPO_TOKEN }}
        allowUpdates: true
        bodyFile: "AutoUpdate_log.txt"
        artifacts: "openwrt/bin/Firmware/*" 
    
    - name: 发送[在线更新固件]至云端2
      continue-on-error: true
      if: steps.regular.outcome == 'success' && env.REGULAR_UPDATE == 'true' && env.REPO_TOKEN
      run: |
        mkdir -p Github_Tags
        cd Github_Tags
        wget -q --no-cookie --no-check-certificate https://api.github.com/repos/${{github.repository}}/releases/tags/AutoUpdate -O Github_Tags
        
    - name: 发送[在线更新固件]至云端3
      continue-on-error: true
      if: steps.regular.outcome == 'success' && env.REGULAR_UPDATE == 'true' && env.REPO_TOKEN
      uses: ncipollo/release-action@main
      with:
        name: AutoUpdate
        tag: AutoUpdate
        token: ${{ secrets.REPO_TOKEN }}
        allowUpdates: true
        bodyFile: "AutoUpdate_log.txt"
        artifacts: "Github_Tags/*" 
